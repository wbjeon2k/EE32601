// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module saxpy_Block_split1_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        x,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        y,
        a
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] x;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] y;
input  [31:0] a;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem_AWVALID;
reg[63:0] m_axi_gmem_AWADDR;
reg m_axi_gmem_WVALID;
reg[31:0] m_axi_gmem_WDATA;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gmem_blk_n_AR;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state20;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_state26;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire   [31:0] grp_fu_418_p2;
reg   [31:0] reg_455;
reg    ap_block_state26_io;
reg    ap_block_state28_io;
reg   [31:0] reg_459;
reg    ap_block_state27_io;
reg    ap_block_state29_io;
reg    ap_block_state1;
reg   [63:0] gmem_addr_1_reg_1105;
reg   [63:0] gmem_addr_2_reg_1111;
reg   [63:0] gmem_addr_3_reg_1117;
reg   [63:0] gmem_addr_4_reg_1123;
reg   [63:0] gmem_addr_5_reg_1129;
reg   [63:0] gmem_addr_6_reg_1135;
reg   [63:0] gmem_addr_7_reg_1141;
reg   [31:0] gmem_addr_read_reg_1147;
reg   [63:0] gmem_addr_8_reg_1152;
reg   [63:0] gmem_addr_9_reg_1158;
reg   [31:0] gmem_addr_1_read_reg_1164;
reg   [31:0] gmem_addr_2_read_reg_1169;
reg   [31:0] gmem_addr_3_read_reg_1186;
reg   [63:0] gmem_addr_10_reg_1191;
reg   [63:0] gmem_addr_11_reg_1198;
reg   [31:0] gmem_addr_4_read_reg_1205;
reg   [63:0] gmem_addr_12_reg_1210;
reg   [31:0] gmem_addr_5_read_reg_1217;
reg   [63:0] gmem_addr_13_reg_1222;
reg   [31:0] gmem_addr_6_read_reg_1229;
reg   [63:0] gmem_addr_14_reg_1234;
reg   [31:0] gmem_addr_7_read_reg_1241;
reg   [63:0] gmem_addr_15_reg_1246;
wire   [31:0] buf_fu_857_p1;
reg   [31:0] gmem_addr_8_read_reg_1270;
reg   [63:0] gmem_addr_16_reg_1275;
wire   [31:0] buf_1_fu_886_p1;
reg   [31:0] gmem_addr_9_read_reg_1287;
reg   [63:0] gmem_addr_17_reg_1292;
wire   [31:0] buf_2_fu_915_p1;
reg   [63:0] gmem_addr_18_reg_1339;
reg   [63:0] gmem_addr_19_reg_1346;
reg   [31:0] gmem_addr_10_read_reg_1353;
wire   [31:0] grp_fu_422_p2;
reg   [31:0] buf_10_reg_1358;
wire   [31:0] ybuf_fu_997_p1;
reg    ap_block_state20_io;
reg   [31:0] gmem_addr_11_read_reg_1368;
reg   [31:0] buf_11_reg_1373;
wire   [31:0] ybuf_1_fu_1001_p1;
reg   [31:0] gmem_addr_12_read_reg_1383;
reg   [31:0] buf_12_reg_1388;
wire   [31:0] grp_fu_427_p2;
reg   [31:0] buf_13_reg_1393;
wire   [31:0] grp_fu_431_p2;
reg   [31:0] buf_14_reg_1398;
wire   [31:0] grp_fu_435_p2;
reg   [31:0] buf_15_reg_1403;
wire   [31:0] grp_fu_439_p2;
reg   [31:0] buf_16_reg_1408;
wire   [31:0] grp_fu_443_p2;
reg   [31:0] buf_17_reg_1413;
wire   [31:0] grp_fu_447_p2;
reg   [31:0] buf_18_reg_1418;
wire   [31:0] grp_fu_451_p2;
reg   [31:0] buf_19_reg_1423;
wire   [31:0] ybuf_2_fu_1005_p1;
reg   [31:0] gmem_addr_13_read_reg_1433;
wire   [31:0] ybuf_3_fu_1009_p1;
reg   [31:0] gmem_addr_14_read_reg_1443;
wire   [31:0] ybuf_4_fu_1013_p1;
reg   [31:0] gmem_addr_15_read_reg_1453;
wire   [31:0] ybuf_5_fu_1017_p1;
reg   [31:0] gmem_addr_16_read_reg_1463;
wire   [31:0] ybuf_6_fu_1021_p1;
reg   [31:0] gmem_addr_17_read_reg_1473;
wire   [31:0] ybuf_7_fu_1030_p1;
reg   [31:0] gmem_addr_18_read_reg_1483;
wire   [31:0] ybuf_8_fu_1039_p1;
reg   [31:0] gmem_addr_19_read_reg_1493;
wire   [31:0] ybuf_9_fu_1048_p1;
wire  signed [63:0] sext_ln27_fu_473_p1;
wire  signed [63:0] sext_ln27_1_fu_500_p1;
wire  signed [63:0] sext_ln27_2_fu_525_p1;
wire  signed [63:0] sext_ln27_3_fu_550_p1;
wire  signed [63:0] sext_ln27_4_fu_575_p1;
wire  signed [63:0] sext_ln27_5_fu_600_p1;
wire  signed [63:0] sext_ln27_6_fu_625_p1;
wire  signed [63:0] sext_ln27_7_fu_650_p1;
wire  signed [63:0] sext_ln27_8_fu_675_p1;
wire  signed [63:0] sext_ln27_9_fu_700_p1;
wire  signed [63:0] sext_ln32_fu_720_p1;
wire  signed [63:0] sext_ln32_1_fu_747_p1;
wire  signed [63:0] sext_ln32_2_fu_772_p1;
wire  signed [63:0] sext_ln32_3_fu_797_p1;
wire  signed [63:0] sext_ln32_4_fu_822_p1;
wire  signed [63:0] sext_ln32_5_fu_847_p1;
wire  signed [63:0] sext_ln32_6_fu_876_p1;
wire  signed [63:0] sext_ln32_7_fu_905_p1;
wire  signed [63:0] sext_ln32_8_fu_962_p1;
wire  signed [63:0] sext_ln32_9_fu_987_p1;
wire   [31:0] bitcast_ln47_fu_1025_p1;
wire   [31:0] bitcast_ln47_1_fu_1034_p1;
wire   [31:0] bitcast_ln47_2_fu_1043_p1;
wire   [31:0] bitcast_ln47_3_fu_1052_p1;
wire   [31:0] bitcast_ln47_4_fu_1057_p1;
wire   [31:0] bitcast_ln47_5_fu_1062_p1;
wire   [31:0] bitcast_ln47_6_fu_1067_p1;
wire   [31:0] bitcast_ln47_7_fu_1072_p1;
wire   [31:0] bitcast_ln47_8_fu_1077_p1;
wire   [31:0] bitcast_ln47_9_fu_1082_p1;
reg   [31:0] grp_fu_418_p0;
reg   [31:0] grp_fu_418_p1;
reg   [31:0] grp_fu_422_p0;
wire   [31:0] grp_fu_427_p0;
wire   [31:0] grp_fu_431_p0;
wire   [31:0] grp_fu_435_p0;
wire   [31:0] grp_fu_439_p0;
wire   [31:0] grp_fu_443_p0;
wire   [31:0] grp_fu_447_p0;
wire   [31:0] grp_fu_451_p0;
wire   [61:0] trunc_ln_fu_463_p4;
wire   [63:0] add_ln27_fu_484_p2;
wire   [61:0] trunc_ln27_1_fu_490_p4;
wire   [63:0] add_ln27_1_fu_510_p2;
wire   [61:0] trunc_ln27_2_fu_515_p4;
wire   [63:0] add_ln27_2_fu_535_p2;
wire   [61:0] trunc_ln27_3_fu_540_p4;
wire   [63:0] add_ln27_3_fu_560_p2;
wire   [61:0] trunc_ln27_4_fu_565_p4;
wire   [63:0] add_ln27_4_fu_585_p2;
wire   [61:0] trunc_ln27_5_fu_590_p4;
wire   [63:0] add_ln27_5_fu_610_p2;
wire   [61:0] trunc_ln27_6_fu_615_p4;
wire   [63:0] add_ln27_6_fu_635_p2;
wire   [61:0] trunc_ln27_7_fu_640_p4;
wire   [63:0] add_ln27_7_fu_660_p2;
wire   [61:0] trunc_ln27_8_fu_665_p4;
wire   [63:0] add_ln27_8_fu_685_p2;
wire   [61:0] trunc_ln27_9_fu_690_p4;
wire   [61:0] trunc_ln1_fu_710_p4;
wire   [63:0] add_ln32_fu_731_p2;
wire   [61:0] trunc_ln32_1_fu_737_p4;
wire   [63:0] add_ln32_1_fu_757_p2;
wire   [61:0] trunc_ln32_2_fu_762_p4;
wire   [63:0] add_ln32_2_fu_782_p2;
wire   [61:0] trunc_ln32_3_fu_787_p4;
wire   [63:0] add_ln32_3_fu_807_p2;
wire   [61:0] trunc_ln32_4_fu_812_p4;
wire   [63:0] add_ln32_4_fu_832_p2;
wire   [61:0] trunc_ln32_5_fu_837_p4;
wire   [63:0] add_ln32_5_fu_861_p2;
wire   [61:0] trunc_ln32_6_fu_866_p4;
wire   [63:0] add_ln32_6_fu_890_p2;
wire   [61:0] trunc_ln32_7_fu_895_p4;
wire   [63:0] add_ln32_7_fu_947_p2;
wire   [61:0] trunc_ln32_8_fu_952_p4;
wire   [63:0] add_ln32_8_fu_972_p2;
wire   [61:0] trunc_ln32_9_fu_977_p4;
reg    grp_fu_418_ce;
reg    grp_fu_422_ce;
reg    grp_fu_427_ce;
reg    grp_fu_431_ce;
reg    grp_fu_435_ce;
reg    grp_fu_439_ce;
reg    grp_fu_443_ce;
reg    grp_fu_447_ce;
reg    grp_fu_451_ce;
reg   [39:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 40'd1;
end

saxpy_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_418_p0),
    .din1(grp_fu_418_p1),
    .ce(grp_fu_418_ce),
    .dout(grp_fu_418_p2)
);

saxpy_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_422_p0),
    .din1(a),
    .ce(grp_fu_422_ce),
    .dout(grp_fu_422_p2)
);

saxpy_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_427_p0),
    .din1(a),
    .ce(grp_fu_427_ce),
    .dout(grp_fu_427_p2)
);

saxpy_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_431_p0),
    .din1(a),
    .ce(grp_fu_431_ce),
    .dout(grp_fu_431_p2)
);

saxpy_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_435_p0),
    .din1(a),
    .ce(grp_fu_435_ce),
    .dout(grp_fu_435_p2)
);

saxpy_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_439_p0),
    .din1(a),
    .ce(grp_fu_439_ce),
    .dout(grp_fu_439_p2)
);

saxpy_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_443_p0),
    .din1(a),
    .ce(grp_fu_443_ce),
    .dout(grp_fu_443_p2)
);

saxpy_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_447_p0),
    .din1(a),
    .ce(grp_fu_447_ce),
    .dout(grp_fu_447_p2)
);

saxpy_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_451_p0),
    .din1(a),
    .ce(grp_fu_451_ce),
    .dout(grp_fu_451_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state40) & (m_axi_gmem_BVALID == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        buf_10_reg_1358 <= grp_fu_422_p2;
        gmem_addr_10_read_reg_1353 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
        buf_11_reg_1373 <= grp_fu_422_p2;
        gmem_addr_11_read_reg_1368 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21))) begin
        buf_12_reg_1388 <= grp_fu_422_p2;
        buf_13_reg_1393 <= grp_fu_427_p2;
        buf_14_reg_1398 <= grp_fu_431_p2;
        buf_15_reg_1403 <= grp_fu_435_p2;
        buf_16_reg_1408 <= grp_fu_439_p2;
        buf_17_reg_1413 <= grp_fu_443_p2;
        buf_18_reg_1418 <= grp_fu_447_p2;
        buf_19_reg_1423 <= grp_fu_451_p2;
        gmem_addr_12_read_reg_1383 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
        gmem_addr_10_reg_1191 <= sext_ln32_fu_720_p1;
        gmem_addr_11_reg_1198 <= sext_ln32_1_fu_747_p1;
        gmem_addr_3_read_reg_1186 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        gmem_addr_12_reg_1210 <= sext_ln32_2_fu_772_p1;
        gmem_addr_4_read_reg_1205 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        gmem_addr_13_read_reg_1433 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
        gmem_addr_13_reg_1222 <= sext_ln32_3_fu_797_p1;
        gmem_addr_5_read_reg_1217 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        gmem_addr_14_read_reg_1443 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        gmem_addr_14_reg_1234 <= sext_ln32_4_fu_822_p1;
        gmem_addr_6_read_reg_1229 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24))) begin
        gmem_addr_15_read_reg_1453 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
        gmem_addr_15_reg_1246 <= sext_ln32_5_fu_847_p1;
        gmem_addr_7_read_reg_1241 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25))) begin
        gmem_addr_16_read_reg_1463 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        gmem_addr_16_reg_1275 <= sext_ln32_6_fu_876_p1;
        gmem_addr_8_read_reg_1270 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state26_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26))) begin
        gmem_addr_17_read_reg_1473 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state17))) begin
        gmem_addr_17_reg_1292 <= sext_ln32_7_fu_905_p1;
        gmem_addr_9_read_reg_1287 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state27_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27))) begin
        gmem_addr_18_read_reg_1483 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        gmem_addr_18_reg_1339 <= sext_ln32_8_fu_962_p1;
        gmem_addr_19_reg_1346 <= sext_ln32_9_fu_987_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state28_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28))) begin
        gmem_addr_19_read_reg_1493 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        gmem_addr_1_read_reg_1164 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        gmem_addr_1_reg_1105 <= sext_ln27_1_fu_500_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        gmem_addr_2_read_reg_1169 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem_addr_2_reg_1111 <= sext_ln27_2_fu_525_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        gmem_addr_3_reg_1117 <= sext_ln27_3_fu_550_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        gmem_addr_4_reg_1123 <= sext_ln27_4_fu_575_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        gmem_addr_5_reg_1129 <= sext_ln27_5_fu_600_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        gmem_addr_6_reg_1135 <= sext_ln27_6_fu_625_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        gmem_addr_7_reg_1141 <= sext_ln27_7_fu_650_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        gmem_addr_8_reg_1152 <= sext_ln27_8_fu_675_p1;
        gmem_addr_9_reg_1158 <= sext_ln27_9_fu_700_p1;
        gmem_addr_read_reg_1147 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | ((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | (~((1'b1 == ap_block_state28_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | (~((1'b1 == ap_block_state26_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24)))) begin
        reg_455 <= grp_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state29_io) & (1'b1 == ap_CS_fsm_state29)) | (~((1'b1 == ap_block_state27_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state33)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state31)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25)))) begin
        reg_459 <= grp_fu_418_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (m_axi_gmem_BVALID == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (m_axi_gmem_BVALID == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state29_io) & (1'b1 == ap_CS_fsm_state29)) | (~((1'b1 == ap_block_state27_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state33)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state31)) | ((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | (~((1'b1 == ap_block_state28_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | (~((1'b1 == ap_block_state26_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state22)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_418_ce = 1'b1;
    end else begin
        grp_fu_418_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_418_p0 = ybuf_9_fu_1048_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_418_p0 = ybuf_8_fu_1039_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_418_p0 = ybuf_7_fu_1030_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_418_p0 = ybuf_6_fu_1021_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_418_p0 = ybuf_5_fu_1017_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_418_p0 = ybuf_4_fu_1013_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_418_p0 = ybuf_3_fu_1009_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_418_p0 = ybuf_2_fu_1005_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_418_p0 = ybuf_1_fu_1001_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_418_p0 = ybuf_fu_997_p1;
    end else begin
        grp_fu_418_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_418_p1 = buf_19_reg_1423;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_418_p1 = buf_18_reg_1418;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_418_p1 = buf_17_reg_1413;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_418_p1 = buf_16_reg_1408;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_418_p1 = buf_15_reg_1403;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_418_p1 = buf_14_reg_1398;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_418_p1 = buf_13_reg_1393;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_418_p1 = buf_12_reg_1388;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_418_p1 = buf_11_reg_1373;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_418_p1 = buf_10_reg_1358;
    end else begin
        grp_fu_418_p1 = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state17)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_422_ce = 1'b1;
    end else begin
        grp_fu_422_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_422_p0 = buf_2_fu_915_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_422_p0 = buf_1_fu_886_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_422_p0 = buf_fu_857_p1;
    end else begin
        grp_fu_422_p0 = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_427_ce = 1'b1;
    end else begin
        grp_fu_427_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_431_ce = 1'b1;
    end else begin
        grp_fu_431_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_435_ce = 1'b1;
    end else begin
        grp_fu_435_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_439_ce = 1'b1;
    end else begin
        grp_fu_439_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_443_ce = 1'b1;
    end else begin
        grp_fu_443_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_447_ce = 1'b1;
    end else begin
        grp_fu_447_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_451_ce = 1'b1;
    end else begin
        grp_fu_451_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
        m_axi_gmem_ARADDR = gmem_addr_19_reg_1346;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_ARADDR = gmem_addr_18_reg_1339;
    end else if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        m_axi_gmem_ARADDR = gmem_addr_17_reg_1292;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state17))) begin
        m_axi_gmem_ARADDR = gmem_addr_16_reg_1275;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        m_axi_gmem_ARADDR = gmem_addr_15_reg_1246;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
        m_axi_gmem_ARADDR = gmem_addr_14_reg_1234;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARADDR = gmem_addr_13_reg_1222;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_ARADDR = gmem_addr_12_reg_1210;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARADDR = gmem_addr_11_reg_1198;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_gmem_ARADDR = sext_ln32_fu_720_p1;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        m_axi_gmem_ARADDR = gmem_addr_9_reg_1158;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_ARADDR = gmem_addr_8_reg_1152;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        m_axi_gmem_ARADDR = gmem_addr_7_reg_1141;
    end else if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_ARADDR = gmem_addr_6_reg_1135;
    end else if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem_ARADDR = gmem_addr_5_reg_1129;
    end else if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_ARADDR = gmem_addr_4_reg_1123;
    end else if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_gmem_ARADDR = gmem_addr_3_reg_1117;
    end else if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_ARADDR = gmem_addr_2_reg_1111;
    end else if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem_ARADDR = gmem_addr_1_reg_1105;
    end else if ((~((m_axi_gmem_ARREADY == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_ARADDR = sext_ln27_fu_473_p1;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state17)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | (~((m_axi_gmem_ARREADY == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state29_io) & (1'b1 == ap_CS_fsm_state29))) begin
        m_axi_gmem_AWADDR = gmem_addr_19_reg_1346;
    end else if ((~((1'b1 == ap_block_state28_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28))) begin
        m_axi_gmem_AWADDR = gmem_addr_18_reg_1339;
    end else if ((~((1'b1 == ap_block_state27_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27))) begin
        m_axi_gmem_AWADDR = gmem_addr_17_reg_1292;
    end else if ((~((1'b1 == ap_block_state26_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26))) begin
        m_axi_gmem_AWADDR = gmem_addr_16_reg_1275;
    end else if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25))) begin
        m_axi_gmem_AWADDR = gmem_addr_15_reg_1246;
    end else if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24))) begin
        m_axi_gmem_AWADDR = gmem_addr_14_reg_1234;
    end else if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        m_axi_gmem_AWADDR = gmem_addr_13_reg_1222;
    end else if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        m_axi_gmem_AWADDR = gmem_addr_12_reg_1210;
    end else if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21))) begin
        m_axi_gmem_AWADDR = gmem_addr_11_reg_1198;
    end else if ((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
        m_axi_gmem_AWADDR = gmem_addr_10_reg_1191;
    end else begin
        m_axi_gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state29_io) & (1'b1 == ap_CS_fsm_state29)) | (~((1'b1 == ap_block_state27_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27)) | (~((1'b1 == ap_block_state28_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | (~((1'b1 == ap_block_state26_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state22)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state35)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state34)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state33)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state31)) | ((1'b1 == ap_CS_fsm_state40) & (m_axi_gmem_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (m_axi_gmem_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state38) & (m_axi_gmem_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state37) & (m_axi_gmem_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state36) & (m_axi_gmem_BVALID == 1'b1)))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state17)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((1'b1 == ap_block_state27_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27)) | (~((1'b1 == ap_block_state28_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | (~((1'b1 == ap_block_state26_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state22)) | (~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) & (m_axi_gmem_BVALID == 1'b1))) begin
        m_axi_gmem_WDATA = bitcast_ln47_9_fu_1082_p1;
    end else if (((1'b1 == ap_CS_fsm_state34) & (m_axi_gmem_BVALID == 1'b1))) begin
        m_axi_gmem_WDATA = bitcast_ln47_8_fu_1077_p1;
    end else if (((1'b1 == ap_CS_fsm_state33) & (m_axi_gmem_BVALID == 1'b1))) begin
        m_axi_gmem_WDATA = bitcast_ln47_7_fu_1072_p1;
    end else if (((1'b1 == ap_CS_fsm_state32) & (m_axi_gmem_BVALID == 1'b1))) begin
        m_axi_gmem_WDATA = bitcast_ln47_6_fu_1067_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) & (m_axi_gmem_BVALID == 1'b1))) begin
        m_axi_gmem_WDATA = bitcast_ln47_5_fu_1062_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        m_axi_gmem_WDATA = bitcast_ln47_4_fu_1057_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        m_axi_gmem_WDATA = bitcast_ln47_3_fu_1052_p1;
    end else if (((1'b1 == ap_CS_fsm_state28) & (m_axi_gmem_RVALID == 1'b1))) begin
        m_axi_gmem_WDATA = bitcast_ln47_2_fu_1043_p1;
    end else if (((1'b1 == ap_CS_fsm_state27) & (m_axi_gmem_RVALID == 1'b1))) begin
        m_axi_gmem_WDATA = bitcast_ln47_1_fu_1034_p1;
    end else if (((1'b1 == ap_CS_fsm_state26) & (m_axi_gmem_RVALID == 1'b1))) begin
        m_axi_gmem_WDATA = bitcast_ln47_fu_1025_p1;
    end else begin
        m_axi_gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state29_io) & (1'b1 == ap_CS_fsm_state29)) | (~((1'b1 == ap_block_state27_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state35)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state34)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state33)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state31)) | ((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | (~((1'b1 == ap_block_state28_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | (~((1'b1 == ap_block_state26_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26)))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if ((~((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if ((~((1'b1 == ap_block_state20_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if ((~((m_axi_gmem_AWREADY == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if ((~((1'b1 == ap_block_state26_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if ((~((1'b1 == ap_block_state27_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if ((~((1'b1 == ap_block_state28_io) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b0 == ap_block_state29_io) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if ((~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if ((~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if ((~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if ((~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if ((~((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (m_axi_gmem_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (m_axi_gmem_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (m_axi_gmem_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (m_axi_gmem_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (m_axi_gmem_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_1_fu_510_p2 = (x + 64'd8);

assign add_ln27_2_fu_535_p2 = (x + 64'd12);

assign add_ln27_3_fu_560_p2 = (x + 64'd16);

assign add_ln27_4_fu_585_p2 = (x + 64'd20);

assign add_ln27_5_fu_610_p2 = (x + 64'd24);

assign add_ln27_6_fu_635_p2 = (x + 64'd28);

assign add_ln27_7_fu_660_p2 = (x + 64'd32);

assign add_ln27_8_fu_685_p2 = (x + 64'd36);

assign add_ln27_fu_484_p2 = (x + 64'd4);

assign add_ln32_1_fu_757_p2 = (y + 64'd8);

assign add_ln32_2_fu_782_p2 = (y + 64'd12);

assign add_ln32_3_fu_807_p2 = (y + 64'd16);

assign add_ln32_4_fu_832_p2 = (y + 64'd20);

assign add_ln32_5_fu_861_p2 = (y + 64'd24);

assign add_ln32_6_fu_890_p2 = (y + 64'd28);

assign add_ln32_7_fu_947_p2 = (y + 64'd32);

assign add_ln32_8_fu_972_p2 = (y + 64'd36);

assign add_ln32_fu_731_p2 = (y + 64'd4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state20_io = ((m_axi_gmem_ARREADY == 1'b0) | (m_axi_gmem_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state26_io = ((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state27_io = ((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state28_io = ((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state29_io = ((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_AWREADY == 1'b0));
end

assign bitcast_ln47_1_fu_1034_p1 = reg_459;

assign bitcast_ln47_2_fu_1043_p1 = reg_455;

assign bitcast_ln47_3_fu_1052_p1 = reg_459;

assign bitcast_ln47_4_fu_1057_p1 = reg_455;

assign bitcast_ln47_5_fu_1062_p1 = reg_459;

assign bitcast_ln47_6_fu_1067_p1 = reg_455;

assign bitcast_ln47_7_fu_1072_p1 = reg_459;

assign bitcast_ln47_8_fu_1077_p1 = reg_455;

assign bitcast_ln47_9_fu_1082_p1 = reg_459;

assign bitcast_ln47_fu_1025_p1 = reg_455;

assign buf_1_fu_886_p1 = gmem_addr_1_read_reg_1164;

assign buf_2_fu_915_p1 = gmem_addr_2_read_reg_1169;

assign buf_fu_857_p1 = gmem_addr_read_reg_1147;

assign grp_fu_427_p0 = gmem_addr_3_read_reg_1186;

assign grp_fu_431_p0 = gmem_addr_4_read_reg_1205;

assign grp_fu_435_p0 = gmem_addr_5_read_reg_1217;

assign grp_fu_439_p0 = gmem_addr_6_read_reg_1229;

assign grp_fu_443_p0 = gmem_addr_7_read_reg_1241;

assign grp_fu_447_p0 = gmem_addr_8_read_reg_1270;

assign grp_fu_451_p0 = gmem_addr_9_read_reg_1287;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign sext_ln27_1_fu_500_p1 = $signed(trunc_ln27_1_fu_490_p4);

assign sext_ln27_2_fu_525_p1 = $signed(trunc_ln27_2_fu_515_p4);

assign sext_ln27_3_fu_550_p1 = $signed(trunc_ln27_3_fu_540_p4);

assign sext_ln27_4_fu_575_p1 = $signed(trunc_ln27_4_fu_565_p4);

assign sext_ln27_5_fu_600_p1 = $signed(trunc_ln27_5_fu_590_p4);

assign sext_ln27_6_fu_625_p1 = $signed(trunc_ln27_6_fu_615_p4);

assign sext_ln27_7_fu_650_p1 = $signed(trunc_ln27_7_fu_640_p4);

assign sext_ln27_8_fu_675_p1 = $signed(trunc_ln27_8_fu_665_p4);

assign sext_ln27_9_fu_700_p1 = $signed(trunc_ln27_9_fu_690_p4);

assign sext_ln27_fu_473_p1 = $signed(trunc_ln_fu_463_p4);

assign sext_ln32_1_fu_747_p1 = $signed(trunc_ln32_1_fu_737_p4);

assign sext_ln32_2_fu_772_p1 = $signed(trunc_ln32_2_fu_762_p4);

assign sext_ln32_3_fu_797_p1 = $signed(trunc_ln32_3_fu_787_p4);

assign sext_ln32_4_fu_822_p1 = $signed(trunc_ln32_4_fu_812_p4);

assign sext_ln32_5_fu_847_p1 = $signed(trunc_ln32_5_fu_837_p4);

assign sext_ln32_6_fu_876_p1 = $signed(trunc_ln32_6_fu_866_p4);

assign sext_ln32_7_fu_905_p1 = $signed(trunc_ln32_7_fu_895_p4);

assign sext_ln32_8_fu_962_p1 = $signed(trunc_ln32_8_fu_952_p4);

assign sext_ln32_9_fu_987_p1 = $signed(trunc_ln32_9_fu_977_p4);

assign sext_ln32_fu_720_p1 = $signed(trunc_ln1_fu_710_p4);

assign trunc_ln1_fu_710_p4 = {{y[63:2]}};

assign trunc_ln27_1_fu_490_p4 = {{add_ln27_fu_484_p2[63:2]}};

assign trunc_ln27_2_fu_515_p4 = {{add_ln27_1_fu_510_p2[63:2]}};

assign trunc_ln27_3_fu_540_p4 = {{add_ln27_2_fu_535_p2[63:2]}};

assign trunc_ln27_4_fu_565_p4 = {{add_ln27_3_fu_560_p2[63:2]}};

assign trunc_ln27_5_fu_590_p4 = {{add_ln27_4_fu_585_p2[63:2]}};

assign trunc_ln27_6_fu_615_p4 = {{add_ln27_5_fu_610_p2[63:2]}};

assign trunc_ln27_7_fu_640_p4 = {{add_ln27_6_fu_635_p2[63:2]}};

assign trunc_ln27_8_fu_665_p4 = {{add_ln27_7_fu_660_p2[63:2]}};

assign trunc_ln27_9_fu_690_p4 = {{add_ln27_8_fu_685_p2[63:2]}};

assign trunc_ln32_1_fu_737_p4 = {{add_ln32_fu_731_p2[63:2]}};

assign trunc_ln32_2_fu_762_p4 = {{add_ln32_1_fu_757_p2[63:2]}};

assign trunc_ln32_3_fu_787_p4 = {{add_ln32_2_fu_782_p2[63:2]}};

assign trunc_ln32_4_fu_812_p4 = {{add_ln32_3_fu_807_p2[63:2]}};

assign trunc_ln32_5_fu_837_p4 = {{add_ln32_4_fu_832_p2[63:2]}};

assign trunc_ln32_6_fu_866_p4 = {{add_ln32_5_fu_861_p2[63:2]}};

assign trunc_ln32_7_fu_895_p4 = {{add_ln32_6_fu_890_p2[63:2]}};

assign trunc_ln32_8_fu_952_p4 = {{add_ln32_7_fu_947_p2[63:2]}};

assign trunc_ln32_9_fu_977_p4 = {{add_ln32_8_fu_972_p2[63:2]}};

assign trunc_ln_fu_463_p4 = {{x[63:2]}};

assign ybuf_1_fu_1001_p1 = gmem_addr_11_read_reg_1368;

assign ybuf_2_fu_1005_p1 = gmem_addr_12_read_reg_1383;

assign ybuf_3_fu_1009_p1 = gmem_addr_13_read_reg_1433;

assign ybuf_4_fu_1013_p1 = gmem_addr_14_read_reg_1443;

assign ybuf_5_fu_1017_p1 = gmem_addr_15_read_reg_1453;

assign ybuf_6_fu_1021_p1 = gmem_addr_16_read_reg_1463;

assign ybuf_7_fu_1030_p1 = gmem_addr_17_read_reg_1473;

assign ybuf_8_fu_1039_p1 = gmem_addr_18_read_reg_1483;

assign ybuf_9_fu_1048_p1 = gmem_addr_19_read_reg_1493;

assign ybuf_fu_997_p1 = gmem_addr_10_read_reg_1353;

endmodule //saxpy_Block_split1_proc
